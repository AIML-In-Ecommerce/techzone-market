"use client";
import { useState } from "react";
import {
  Badge,
  Button,
  Card,
  Carousel,
  Descriptions,
  DescriptionsProps,
  Divider,
  Flex,
  FloatButton,
  InputNumber,
  List,
  Modal,
  Progress,
  Rate,
  Spin,
  Switch,
  Tabs,
  Tag,
} from "antd";
import ReviewList from "./ReviewList";
import FloatingCartForm from "./FloatingCartForm";
import { GiShoppingCart } from "react-icons/gi";
import { CustomerServiceOutlined } from "@ant-design/icons";

export default function ProductDetail() {
  const items: DescriptionsProps["items"] = [
    {
      key: "1",
      label: "Product",
      children: "ECOVACS DEEBOT OZMO T8 NEO",
    },
    {
      key: "2",
      label: "Usage Time",
      children: "2019-04-24 18:00:00",
      span: 2,
    },
    {
      key: "3",
      label: "Status",
      children: <Badge status="processing" text="Available" />,
    },
    {
      key: "4",
      label: "Negotiated Amount",
      children: "$80.00",
    },
    {
      key: "5",
      label: "Discount",
      children: "$20.00",
    },
    {
      key: "6",
      label: "Config Info",
      children: (
        <>
          Data disk type: MongoDB
          <br />
          Database version: 3.4
          <br />
          Package: dds.mongo.mid
          <br />
          Storage space: 10 GB
          <br />
          Replication factor: 3
          <br />
          Region: East China 1
          <br />
        </>
      ),
      span: 3,
    },
  ];

  // tabs, descriptions and review summary
  const tabItems = [
    {
      label: `Descriptions`,
      key: "1",
      children: (
        <div className="p-2">
          <b>T·ªïng Quan: </b>
          Robot h√∫t b·ª•i ƒë√£ tr·ªü th√†nh m·ªôt ph·∫ßn kh√¥ng th·ªÉ thi·∫øu trong cu·ªôc s·ªëng
          hi·ªán ƒë·∫°i, v√† iRobot Roomba 980 l√† m·ªôt trong nh·ªØng s·ª± l·ª±a ch·ªçn h√†ng ƒë·∫ßu
          trong th·ªã tr∆∞·ªùng n√†y. V·ªõi nhi·ªÅu t√≠nh nƒÉng th√¥ng minh v√† hi·ªáu su·∫•t t·ªët,
          Roomba 980 h·ª©a h·∫πn mang l·∫°i s·ª± thu·∫≠n ti·ªán v√† s·∫°ch s·∫Ω cho gia ƒë√¨nh c·ªßa
          b·∫°n.
          <br />
          <b>Hi·ªáu Su·∫•t H√∫t B·ª•i: </b>
          Roomba 980 c√≥ m·ªôt h·ªá th·ªëng h√∫t b·ª•i m·∫°nh m·∫Ω v·ªõi c√¥ng ngh·ªá h√∫t
          AeroForce, gi√∫p l√†m s·∫°ch hi·ªáu qu·∫£ c·∫£ tr√™n c√°c b·ªÅ m·∫∑t c·ª©ng v√† th·∫£m. B·ªô
          c·∫£m bi·∫øn th√¥ng minh gi√∫p robot nh·∫≠n bi·∫øt c√°c khu v·ª±c b·∫©n v√† tƒÉng c∆∞·ªùng
          h√∫t ·ªü nh·ªØng v√πng ƒë√≥.
          <br />
          <b>T√≠nh NƒÉng Th√¥ng Minh: </b>
          V·ªõi t√≠nh nƒÉng ƒëi·ªÅu khi·ªÉn t·ª´ xa th√¥ng qua ·ª©ng d·ª•ng di ƒë·ªông, Roomba 980
          cho ph√©p b·∫°n ki·ªÉm so√°t v√† l·∫≠p l·ªãch tr√¨nh h√∫t b·ª•i m·ªôt c√°ch linh ho·∫°t.
          H·ªá th·ªëng ƒëi·ªÅu h∆∞·ªõng iAdapt 2.0 c√πng v·ªõi c√°c c·∫£m bi·∫øn gi√∫p robot tr√°nh
          va ch·∫°m v√† ƒëi·ªÅu h∆∞·ªõng th√¥ng minh trong kh√¥ng gian, tr√°nh c√°c v·∫≠t c·∫£n
          v√† l√™n c√°c b·ªÅ m·∫∑t kh√°c nhau m·ªôt c√°ch d·ªÖ d√†ng.
          <br />
          <b>Th·ªùi L∆∞·ª£ng Pin: </b>
          M·ªôt ƒëi·ªÉm y·∫øu nh·ªè c·ªßa Roomba 980 l√† th·ªùi l∆∞·ª£ng pin kh√¥ng ƒë∆∞·ª£c d√†i l√¢u
          nh∆∞ mong ƒë·ª£i. Trong ƒëi·ªÅu ki·ªán s·ª≠ d·ª•ng th√¥ng th∆∞·ªùng, pin c√≥ th·ªÉ ƒë·ªß cho
          vi·ªác h√∫t b·ª•i trong kho·∫£ng 1-2 gi·ªù, t√πy thu·ªôc v√†o c·∫•p ƒë·ªô s·∫°ch s·∫Ω c·ªßa
          kh√¥ng gian.
          <br />
          <b>D·ªÖ D√†ng V·ªá Sinh: </b>
          Vi·ªác v·ªá sinh v√† b·∫£o d∆∞·ª°ng Roomba 980 c≈©ng kh√° ƒë∆°n gi·∫£n. B·ªô l·ªçc v√†
          th√πng ch·ª©a b·ª•i d·ªÖ d√†ng th√°o r·ªùi v√† l√†m s·∫°ch. B·∫°n ch·ªâ c·∫ßn th∆∞·ªùng xuy√™n
          l√†m s·∫°ch c√°c ph·∫ßn n√†y ƒë·ªÉ ƒë·∫£m b·∫£o hi·ªáu su·∫•t h√∫t b·ª•i t·ªët nh·∫•t.
        </div>
      ),
    },
    {
      label: `Technical Specifications`,
      key: "2",
      children: <Descriptions bordered items={items} />,
    },
    {
      label: `Review Summary`,
      key: "3",
      children: (
        <div className="p-2">
          <Flex gap="small">
            <Rate
              disabled
              allowHalf
              defaultValue={4.5}
              style={{ padding: 5 }}
            />
            <div className="font-bold uppercase text-xl">4.5</div>
          </Flex>

          <div className="font-light pb-5">(10 ƒë√°nh gi√°)</div>

          <Flex vertical gap="small" style={{ width: 300 }}>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={5}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={66} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={4}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={33} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={3}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={1} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={2}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={0} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={1}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={0} size="small" />
              </Flex>
            </Flex>
          </Flex>
          <div className="font-bold pt-5 text-lg">TechZone Assistant ü§ñ</div>

          <div className="font-semibold pt-5">
            T·ªïng quan ƒë√°nh gi√° kh√°ch h√†ng:
          </div>
          <div className="pt-2">
            T·ªïng th·ªÉ, iRobot Roomba 980 l√† m·ªôt s·ª± l·ª±a ch·ªçn t·ªët cho ng∆∞·ªùi ti√™u
            d√πng mu·ªën ƒë·∫ßu t∆∞ v√†o m·ªôt robot h√∫t b·ª•i th√¥ng minh v√† hi·ªáu qu·∫£. V·ªõi
            hi·ªáu su·∫•t h√∫t b·ª•i m·∫°nh m·∫Ω, t√≠nh nƒÉng th√¥ng minh v√† kh·∫£ nƒÉng v·∫≠n h√†nh
            linh ho·∫°t, Roomba 980 s·∫Ω gi√∫p gi·∫£m b·ªõt c√¥ng vi·ªác lau ch√πi v√† mang
            l·∫°i m·ªôt kh√¥ng gian s·ªëng s·∫°ch s·∫Ω h∆°n.
          </div>
        </div>
      ),
    },
  ];

  // combo products
  const data = [
    {
      title: "Combo 1",
    },
    {
      title: "Combo 2",
    },
    {
      title: "Combo 3",
    },
    {
      title: "Combo 4",
    },
  ];

  // modal
  const [loading, setLoading] = useState(false);
  const [open, setOpen] = useState(false);
  const [confirmLoading, setConfirmLoading] = useState(false);
  const [modalText, setModalText] = useState(<>Estimated price: 0</>);
  const showModal = () => {
    setOpen(true);
  };
  const handleOk = () => {
    setModalText(
      <Flex gap="small">
        <Spin />
        Adding to cart...
      </Flex>
    );
    setConfirmLoading(true);
    setTimeout(() => {
      setOpen(false);
      setConfirmLoading(false);
      setModalText(<>Add to cart?</>);
    }, 2000);
  };
  const handleCancel = () => {
    console.log("Clicked cancel button");
    setOpen(false);
  };

  // button group
  const [openButton, setOpenButton] = useState(true);
  const onChange = (checked: boolean) => {
    console.log("Clicked open group button");
    setOpenButton(checked);
  };

  return (
    <div className="justify-between mx-10 lg:mx-20 gap-10 grid grid-cols-3">
      <div className="col-span-2">
        {/* about product */}
        <div className="flex lg:flex-row md:flex-row flex-col my-10">
          <div className="bg-white shadow-md max-w-1/4 h-fit p-4">
            <img
              className="h-64 object-cover w-full"
              src={"https://i.insider.com/5f835d4ebab422001979aaeb"}
              // alt={classInfo.name}
            />
          </div>
          {/* desc */}
          <div className="p-4">
            <div className="font-bold uppercase text-lg">
              ROBOT H√öT B·ª§I LAU NH√Ä TH√îNG MINH ECOVACS DEEBOT OZMO T8 NEO B·∫¢N
              N·ªòI ƒê·ªäA
            </div>

            <Flex gap="small">
              <Rate
                disabled
                allowHalf
                defaultValue={4.5}
                style={{ padding: 5 }}
              />
              <div className="font-bold uppercase text-xl">4.5</div>
            </Flex>

            <div className="flex flex-row gap-3 my-2">
              <div className="line-through text-gray-600 uppercase text-xl md:text-2xl lg:text-2xl">
                8,900,000 ƒê
              </div>
              <div className="font-bold text-red-500 uppercase text-xl md:text-2xl lg:text-2xl">
                4,900,000 ƒê
              </div>
              <div className="text-red-500 uppercase text-xs mt-1">-50%</div>
            </div>
            <div className="capitalize text-xs mt-5">Sub-category:</div>
            <Tag>
              <a href="https://github.com/ant-design/ant-design/issues/1862">
                ƒêi·ªán m√°y - ƒêi·ªán gia d·ª•ng
              </a>
            </Tag>
            <Tag>
              <a href="https://github.com/ant-design/ant-design/issues/1862">
                Thi·∫øt b·ªã vƒÉn ph√≤ng
              </a>
            </Tag>
          </div>
        </div>
        {/* related products to buy with  */}
        <div className="">
          <div className="font-semibold p-5 text-md">Combo suggestions</div>

          <List
            grid={{ gutter: 16, column: 4 }}
            dataSource={data}
            renderItem={(item) => (
              <List.Item>
                <div className="cursor-pointer">
                  <Card title={item.title}>Card content</Card>
                </div>
              </List.Item>
            )}
          />
        </div>
        {/* <Carousel autoplay style={{ maxWidth: "200" }}>
          <div>
            <img
              className="h-64 object-cover w-full"
              src={"https://i.insider.com/5f835d4ebab422001979aaeb"}
              // alt={classInfo.name}
            />{" "}
          </div>
          <div>
            <img
              className="h-64 object-cover w-full"
              src={"https://i.insider.com/5f835d4ebab422001979aaeb"}
              // alt={classInfo.name}
            />{" "}
          </div>
          <div>
            <img
              className="h-64 object-cover w-full"
              src={"https://i.insider.com/5f835d4ebab422001979aaeb"}
              // alt={classInfo.name}
            />{" "}
          </div>
          <div>
            <img
              className="h-64 object-cover w-full"
              src={"https://i.insider.com/5f835d4ebab422001979aaeb"}
              // alt={classInfo.name}
            />{" "}
          </div>
        </Carousel> */}
        {/* tabs, descriptions and review summary */}
        <div className="my-5">
          <Tabs
            defaultActiveKey="1"
            type="card"
            items={tabItems.map((item, i) => {
              //   const id = String(i + 1);
              return {
                label: item.label,
                key: item.key,
                children: item.children,
              };
            })}
          />
        </div>
      </div>
      <div className="col-span-1 my-10">
        <FloatingCartForm />
      </div>
      <div className="col-span-2">
        {/* reviews */}
        <Divider>Kh√°ch h√†ng ƒë√°nh gi√°</Divider>

        <ReviewList />

        <FloatButton.Group>
          <FloatButton
            icon={<GiShoppingCart />}
            tooltip={<div>Add to Cart</div>}
            badge={{ count: 23, overflowCount: 999 }}
            onClick={showModal}
          />
          <FloatButton.BackTop tooltip={<div>Move to Top</div>} />
        </FloatButton.Group>

        <Modal
          open={open}
          title="Cart Details"
          onOk={handleOk}
          confirmLoading={confirmLoading}
          onCancel={handleCancel}
          footer={[
            <Button key="back" onClick={handleCancel}>
              Return
            </Button>,
            <Button
              key="submit"
              // type="primary"
              loading={loading}
              onClick={handleOk}
            >
              Add to Cart
            </Button>,
            <Button
              key="link"
              href="https://google.com"
              type="primary"
              loading={loading}
              onClick={handleOk}
            >
              Move to Checkout
            </Button>,
          ]}
        >
          {/* <div className="mx-2">
            <Flex gap="small">
              <div className="mt-1"> S·ªë l∆∞·ª£ng: </div>
              <InputNumber
                min={0}
                max={999}
                defaultValue={0}
                // onChange={onChange}
                changeOnWheel
              />
            </Flex>
          </div>

          <Flex gap="small">
            <div className="m-2 my-5 text-xl"> {modalText} </div>
          </Flex> */}

          <InputNumber
            min={0}
            max={999}
            defaultValue={0}
            // onChange={onChange}
            changeOnWheel
          />
          <p>{modalText}</p>
        </Modal>
      </div>
    </div>
  );
}
